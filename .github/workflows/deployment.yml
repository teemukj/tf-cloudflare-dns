# Deployment pipeline
name: Cloudflare deployment

# Set workflow triggers
on: 
  workflow_dispatch:
    inputs:
      apply:
        type: boolean
        description: 'Terraform apply? Defaults to plan only.'
  push:
    branches:    
      - dev
      - main
    paths:
      - '.github/workflows/deployment.yml'
      - 'terraform/**'

# OIDC permissions
permissions:
  id-token: write
  contents: read

# Set pipeline agent environment variables
env:
  TERRAFORM_VERSION: 1.8.1
  TERRAFORM_WORKDIR: terraform
  TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:

  # Terraform Plan job
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_WORKDIR }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Log in to Azure using OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: Terraform Init
      id: init
      run: terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true
    
    - name: Terraform Validate
      id: validate
      run: terraform validate
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color --out=out.tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true
    
    - name: Upload the plan
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: ${{ env.TERRAFORM_WORKDIR }}/out.tfplan


  # Terraform Apply job
  apply:
    name: Terraform apply
    needs: [ plan ]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.apply) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_WORKDIR }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Log in to Azure using OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Download the plan
      uses: actions/download-artifact@v4
      with:
        name: tfplan
        path: ${{ env.TERRAFORM_WORKDIR }}

    - name: Apply the plan
      id: apply
      run: terraform apply -no-color -auto-approve out.tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true
